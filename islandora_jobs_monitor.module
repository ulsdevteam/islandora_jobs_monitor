<?php

/**
 * @file
 * Defines all the hooks this module implements.
 *
 * islandora_jobs_monitor.module: defines paths as entry points and acts
 *  as a hub for dispatching tasks to other modules.
 *
 * This file is a utility module for use with Islandora.
 *
 * WARNING: Part of this module does not adhere to standard drupal database
 * settings.  This can be installed as either a master or a worker or even as
 * a drupal-free-worker in the case of the cron_fedora_health.php script.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the program.  If not, see <http ://www.gnu.org/licenses/>.
 */

// Permissions.
define('ISLANDORA_USE_STACK_MONITOR', 'use islandora jobs monitor');
define('ISLANDORA_JOBS_MONITOR_ACCESS_API', 'use islandora jobs monitor pushdata api');

/**
 * Implements hook_menu().
 */
function islandora_jobs_monitor_menu() {
  $menu = array(
    'admin/islandora/islandora_job_monitor' => array(
      'title' => 'Islandora Jobs Monitor',
      'description' => 'Change the settings for Islandora Jobs Monitor.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_jobs_monitor_admin_form'),
      'access arguments' => array(ISLANDORA_MANAGE_PROPERTIES),
      'file' => 'includes/admin.form.inc',
    ),
    'islandora/islandora_job_monitor' => array(
      'title' => 'Islandora Jobs Monitor',
      'description' => 'To gather and report health and job processing for relevant jobs servers.',
      'page callback' => array('islandora_jobs_monitor_page'),
      'file' => 'includes/islandora_jobs_monitor.page.inc',
      'access arguments' => array(ISLANDORA_USE_STACK_MONITOR),
    ),
    'islandora/islandora_job_monitor/error_log/%' => array(
      'title' => 'Islandora Jobs Monitor View Error Log',
      'page callback' => array('islandora_jobs_monitor_error_log_page'),
      'page arguments' => array(3),
      'file' => 'includes/error_log.page.inc',
      'access arguments' => array(ISLANDORA_USE_STACK_MONITOR),
    ),
    'islandora/islandora_job_monitor/api/serverhealth' => array(
      'title' => 'Islandora Jobs Monitor API endpoint for server health',
      'file' => 'includes/api.inc',
      'page callback' => array('islandora_jobs_monitor_api_serverhealth'),
      'type' => MENU_CALLBACK,
      'access callback' => 'islandora_jobs_monitor_access_api_callback',
      'access arguments' => array(ISLANDORA_JOBS_MONITOR_ACCESS_API),
    ),
    'islandora/islandora_job_monitor/command_handler/%/%' => array(
      'title' => 'Islandora Jobs Monitor - pending development',
      'page callback' => array('islandora_jobs_monitor_control_link_handler'),
      'page arguments' => array(3,4),
      'file' => 'includes/islandora_jobs_monitor_control_link_handler.page.inc',
      'access arguments' => array(ISLANDORA_USE_STACK_MONITOR),
    ),
  );  
  return $menu;
}

/**
 * Implements hook_presprocess_theme().
 *
 * This code will remove the sidebar and will add the stylesheet and js needed
 * for the report display.
 */
function islandora_jobs_monitor_preprocess_page(&$vars) {
  $item = menu_get_item();
  if (is_array($item)) {
    // For the main monitor page, add a refresh meta tag.
    if ($item['path'] == 'islandora/islandora_job_monitor') {
      drupal_add_js('https://www.gstatic.com/charts/loader.js');
      $meta_refresh = array(
        '#type' => 'html_tag',
        '#tag' => 'meta',
        '#attributes' => array(
           'http-equiv' => 'refresh',
           'content' => '600',
           // This is not needed if the same page:
           //  'content' => '600, url=/islandora/islandora_job_monitor',
        ),
      );
      drupal_add_html_head($meta_refresh, 'meta_refresh');
    }

    // Add css and js for pages handled by this module that need them.
    if ($item['path'] == 'islandora/islandora_job_monitor' ||
        $item['path'] == 'islandora/islandora_job_monitor/error_log/%') {
      $module_path = drupal_get_path('module', 'islandora_jobs_monitor');
      drupal_add_css($module_path . '/css/islandora_jobs_monitor.css');
      drupal_add_js($module_path . '/js/islandora_jobs_monitor.js');
      $vars['page']['sidebar'] = array();
    }
  }
}

/**
 * Implements hook_theme().
 */
function islandora_jobs_monitor_theme() {
  return array(
    'islandora_jobs_monitor_page' => array(
      'template' => 'theme/islandora-jobs-monitor-page',
      'variables' => array(
        'themed_hosts' => '',
        'current_report' => '',
      ),
    ),
    'islandora_jobs_monitor_themed_worker' => array(
      'template' => 'theme/islandora-jobs-monitor-themed-worker',
      'variables' => array(
        'gauge' => '',
        'host_record' => '',
        'control_links' => '',
        'cpu_values' => '',
        'memory_values' => ''
      ),
    ),
    'islandora_jobs_monitor_gauge' => array(
      'template' => 'theme/islandora-jobs-monitor-gauge',
      'variables' => array(
        'islandora_jobs_monitor_gauge' => '',
        'disk_used' => '',
        'cpu' => '',
        'memory' => ''
      ),
    ),
    'islandora_jobs_monitor_themed_master' => array(
      'template' => 'theme/islandora-jobs-monitor-themed-master',
      'variables' => array(
        'gauge' => '',
        'host_record' => '',
        'cpu_values' => '',
        'memory_values' => ''
      ),
    ),
    'islandora_jobs_monitor_themed_0_to_100_metrics' => array(
      'template' => 'theme/islandora-jobs-monitor-themed-0-to-100-metrics',
      'variables' => array(
        'label' => '',
        'values' => '',
      ),
    ),
    'islandora_jobs_monitor_error_log' => array(
      'template' => 'theme/islandora-jobs-monitor-error-log',
      'variables' => array(
        'host_name' => '',
        'error_log' => '',
      ),
    ),
    'islandora_jobs_monitor_themed_control_links' => array(
      'template' => 'theme/islandora-jobs-monitor-control-links',
      'variables' => array(
        'server_control_links' => '',
      ),
    ),
  );
}

/**
 * Implements hook_permission().
 */
function islandora_jobs_monitor_permission() {
  return array(
    ISLANDORA_USE_STACK_MONITOR => array(
      'title' => t('Use the Islandora Jobs Stack Monitor'),
      'description' => t('User can use the Islandora Jobs Stack Monitor.'),
    ),
    ISLANDORA_JOBS_MONITOR_ACCESS_API => array(
      'title' => t('Use the Islandora Jobs Stack Monitor Pushdata API'),
      'description' => t('User can use send data to the Islandora Jobs Monitor Pushdata API.'),
    ),
  );
}

/**
 * Helper function to connect to the bigfoot database using the site's settings.php file.
 */
function islandora_jobs_monitor_get_databaselink($db_section = 'default') {
  global $databases;
  // Use the settings.php file for this install.
  $here = __FILE__;
  @list($sites_all_folder, $junk) = explode("/all/", $here);
  // Try the gmworker folder path - should only exist on gmworkers
  $settings_file = $sites_all_folder . '/gmworker/settings.php';
  if (!file_exists($settings_file)) {
    $settings_file = $sites_all_folder . '/gamera/settings.php';
    if (!file_exists($settings_file)) {
      $settings_file = $sites_all_folder . '/default/settings.php';
      if (!file_exists($settings_file)) {     
        $settings_file = '';
      }
    }
  }

  //  $settings_file = variable_get('islandora_jobs_monitor_settings_file', '/var/www/html/drupal_gamera_sandbox/sites/gamera.library.pitt.edu/settings.php');
  if (!$settings_file) {
    drupal_set_message('The settings file value has not been set.  It is needed in order ' .
      'to be able to run the drush commands with the appropriate include path. ' .
      l('Configure Islandora Jobs Monitor here', 'admin/islandora/islandora_jobs_monitor') . '.');
    return NULL;
  }
  require_once($settings_file);

  if (count($databases) < 1 || !array_key_exists($db_section, $databases['default'])) {
    die('Database settings not found at ' . $settings_file . '.');
  }

  $db_host = $databases['default'][$db_section]['host'];
  $db_user = $databases['default'][$db_section]['username'];
  $db_pass = $databases['default'][$db_section]['password'];
  $db_name = $databases['default'][$db_section]['database'];

  $link = mysqli_connect($db_host, $db_user, $db_pass, $db_name);
  if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
  }

  return $link;
}

function islandora_jobs_monitor_sql_error_die($link, $sql) {
  $message  = 'Invalid query: ' . mysqli_error($link) . "<br>";
  $message .= 'Query: <pre>' . $sql ."</pre>";
  $bt = debug_backtrace();
  $variables = array('@sql' => $sql, '@backtrace' => $bt);
  watchdog('islandora_jobs_monitor', 'There was an error executing a database query.  The sql = @sql.  Debug backtrace @backtrace', $variables, WATCHDOG_ERROR);
  die($message);
}

/**
 * Implements islandora_job_submitted().
 * 
 * This will take the payload and create a record that matches the current 
 * hostname particular to the worker that has picked up the job.
 */
function islandora_jobs_monitor_islandora_job_started($payload) {
  module_load_include('inc', 'islandora_jobs_monitor', 'includes/db');
  // Use the $jobname and the ip_address to create a record in the
  // `host_gearman_job` table that matches the server that has this ip_address.
  $server_id = islandora_jobs_monitor_get_server_id_of_ip(gethostbyname(gethostname()));
  if (($server_id > -1)) {
    // Do not enter the job when this is triggered on the gearman "master" server
    // - which is identified by server_id = 0.
    if ($server_id > 0) {
      $payload_as_arr = json_decode($payload, true);
      $jobname = $payload_as_arr['func'];
      $args = $payload_as_arr['args'];
      if (count($args) > 0) {
        $pid = $args[0];
      }

      islandora_jobs_monitor_add_job_record($server_id, $pid, $jobname);
    }
  }
  else {
    $variables = array('@ip_address' => gethostbyname(gethostname()));
    watchdog('islandora_jobs_monitor', 'There was no record in `islandora_jobs_monitor`.`servers` for ip_address = "@ip_address".', $variables, WATCHDOG_ERROR);
  }
}

function islandora_jobs_monitor_islandora_job_finished($pid_and_job) {
  if (is_array($pid_and_job)) {
    module_load_include('inc', 'islandora_jobs_monitor', 'includes/db');
    $pid = $pid_and_job['pid'];
    $jobname = $pid_and_job['job'];
    $server_id = islandora_jobs_monitor_get_server_id_of_ip(gethostbyname(gethostname()));
    islandora_jobs_monitor_completed_job_record($server_id, $pid, $jobname);
  }
  else {
    error_log('pid and job not passed');
  }
}

function islandora_jobs_monitor_access_api_callback() {
  global $user;
  return (user_access(ISLANDORA_JOBS_MONITOR_ACCESS_API, $user));
}

